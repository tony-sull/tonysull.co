---
import type { HTMLAttributes } from "astro/types"
import { getImage } from "astro:assets"
import type { CollectionEntry } from "astro:content"

export type Props = Omit<HTMLAttributes<"img">, 'src'|'alt'|'width'|'height'> & {
	src: CollectionEntry<'photos'>['data']
    zoomIn?: boolean
}

const { src, zoomIn = false, ...attrs } = Astro.props

const widths = [375, 522, 1044]

const srcs = await Promise.all(
	widths.map((width) =>
		getImage({
			src: src.photo.src,
			alt: src.name,
			width,
			height: src.photo.height * (width / src.photo.width),
		}),
	),
)

const fallback = srcs[0]!
const srcset = widths.map((width, i) => `${srcs[i]!.src} ${width}w`).join(", ")
---

<img
	src={fallback.src}
	srcset={srcset}
	{...fallback.attributes}
	{...attrs}
	style={{
		width: "100%",
		height: "auto",
		aspectRatio: fallback.attributes.width / fallback.attributes.height,
	}}
/>
