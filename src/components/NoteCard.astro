---
import type { CollectionEntry } from 'astro:content'
import Card from './Card.astro'
import { scrape } from '~/utils/scrape'
import Show from './Show.astro'

export type Props = CollectionEntry<'notes'>

const { data, render, slug } = Astro.props

const { Content } = await render()

const replyMetadata = data.inReplyTo ? await scrape(data.inReplyTo) : undefined
---

<Card
  author={data.author}
  href={`/notes/${slug}`}
  date={data.published}
  tags={data.category}
  photo={data.photo}
>
  <Content />

  <div slot="footer">
    <a href={`/articles/${slug}`} class="u-url">View and share</a>

    <Show when={replyMetadata}>
      <small>
        <span>In reply to</span>
        <a href={data.inReplyTo} class="u-in-reply-to">
          {replyMetadata?.title}
        </a>
      </small>
    </Show>
  </div>
</Card>

<style>
  footer small span {
    opacity: 75%;
  }

  [target='_blank'] > h2:after,
  .u-in-reply-to:after {
    content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' viewBox='0 0 24 24'%3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M10 6H6a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-4M14 4h6m0 0v6m0-6L10 14'/%3E%3C/svg%3E");
    margin-inline-start: var(--size-1);
    opacity: 0.5;
  }

  :global([data-theme='dark']) [target='_blank'] > h2:after,
  :global([data-theme='dark']) .u-in-reply-to:after {
    filter: invert();
  }

  .u-url {
    white-space: nowrap;
    font-size: var(--size-fluid-2);
  }

  .u-in-reply-to {
    font-style: italic;
  }
</style>
